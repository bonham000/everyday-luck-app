BUSINESS:

- Price: $50 - $500 USD for a one-time life-time access
- Cost:
  - Fixed investment cost of engineering time and effort
  - Overhead to run it, potentially higher overhead to scale (this is fairly low)
- How big is the market? What is the market?
  - The market is the person who ever considered typing "learn to code" into Google
  - English speakers
  - Interested in learning to code
  - Millions+ of people
  - 20,000+ bootcamp graduates in 2019
  - coding bootcamps ~ 10% growth in last 10 years
  - codecademy (50m+ VC), freecodecamp, ~ 1,000,000s
  - ~20,000,000 "software developers", 1m+ in USA
  - AlgoExpert, 600+ monthly active signups recently
  - Market will expand:
  - Software industry will grow
  - Traditional careers will be become increasingly challenging

  -> capture a paying audience on the order of 10,000s of users
  -> 5,000 * 50  = $250,000
  -> 2,500 * 100 = $250,000

  - this product does not HAVE to scale to succeed
  - however, it still definitely can

RISKS:

- Execution (???): building challenge/curriculum content
- Distribution: how do we get this out there?!?!?!?!?!?!?!?!

ROAD MAP:

Phase I*: Landing Page + proof of concept prototype < 1 month   -> collect early access emails
Phase II: Programming Fundamentals section          < 3 months  -> includes payment option
Phase III: Build the whole thing                    < 12 months

* Usability/User research testing
- Find people in Taipei
-> solve the problem of how to teach people effectively

- this staggered approach more gradually tries to solve the Distribution problem
- SEO
- Social media
- Marketing, paid ads
- "Learning to code" communities, podcasts, Reddit, etc.
- Medium articles
- Affiliate links/programs
- FREE section videos are all on YouTube
- Cost of "click from the outside" to "started coding" is < 2 clicks, no signup, no payment, < 10 seconds

-> ~ 12 months are spent building this, to decide it work somehow
-> failed startup
-> cost of doing all of the work...

* If the product is good, people will find it, and they will pay it

12 curriculum sections

- Programming Fundamentals (100% FREE to everyone)
- Developer Workflow (Start of paid content)
- Async Programming
- UI Programming
- Server Programming
- Databases
- Mobile
- Testing & Automation
- Debugging & Refactoring
- Delivery and Deployment
- Capstone Project(s)
- Career & Interviewing Section

each section:

- key concept overview video
- code challenges (may have additional video explanation)
- project (independent which student builds and deploys)
- guided project/project solution
- "special topics videos" - other content which is not that relevant
